// Mocks generated by Mockito 5.4.0 from annotations
// in es/test/Database/RemoteDBHelper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:typed_data' as _i8;

import 'package:cloud_firestore/cloud_firestore.dart' as _i4;
import 'package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart'
    as _i3;
import 'package:es/Model/TransactionsModel.dart' as _i9;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i6;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettings_1 extends _i1.SmartFake implements _i3.Settings {
  _FakeSettings_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_2<T extends Object?> extends _i1.SmartFake
    implements _i4.CollectionReference<T> {
  _FakeCollectionReference_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWriteBatch_3 extends _i1.SmartFake implements _i4.WriteBatch {
  _FakeWriteBatch_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoadBundleTask_4 extends _i1.SmartFake
    implements _i4.LoadBundleTask {
  _FakeLoadBundleTask_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_5<T extends Object?> extends _i1.SmartFake
    implements _i4.QuerySnapshot<T> {
  _FakeQuerySnapshot_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuery_6<T extends Object?> extends _i1.SmartFake
    implements _i4.Query<T> {
  _FakeQuery_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentReference_7<T extends Object?> extends _i1.SmartFake
    implements _i4.DocumentReference<T> {
  _FakeDocumentReference_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_8<T> extends _i1.SmartFake implements _i5.Future<T> {
  _FakeFuture_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_9 extends _i1.SmartFake
    implements _i4.FirebaseFirestore {
  _FakeFirebaseFirestore_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_10<T extends Object?> extends _i1.SmartFake
    implements _i4.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_11 extends _i1.SmartFake
    implements _i6.ActionCodeInfo {
  _FakeActionCodeInfo_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_12 extends _i1.SmartFake
    implements _i7.UserCredential {
  _FakeUserCredential_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_13 extends _i1.SmartFake
    implements _i7.ConfirmationResult {
  _FakeConfirmationResult_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_14 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_15 extends _i1.SmartFake implements _i6.UserMetadata {
  _FakeUserMetadata_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_16 extends _i1.SmartFake implements _i7.MultiFactor {
  _FakeMultiFactor_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_17 extends _i1.SmartFake implements _i6.IdTokenResult {
  _FakeIdTokenResult_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_18 extends _i1.SmartFake implements _i7.User {
  _FakeUser_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_19<T> extends _i1.SmartFake
    implements _i5.StreamSubscription<T> {
  _FakeStreamSubscription_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i4.FirebaseFirestore {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set settings(_i3.Settings? settings) => super.noSuchMethod(
        Invocation.setter(
          #settings,
          settings,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Settings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettings_1(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeSettings_1(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i3.Settings);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i4.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_2<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_2<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i4.CollectionReference<Map<String, dynamic>>);
  @override
  _i4.WriteBatch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeWriteBatch_3(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeWriteBatch_3(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i4.WriteBatch);
  @override
  _i5.Future<void> clearPersistence() => (super.noSuchMethod(
        Invocation.method(
          #clearPersistence,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> enablePersistence(
          [_i3.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #enablePersistence,
          [persistenceSettings],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i4.LoadBundleTask loadBundle(_i8.Uint8List? bundle) => (super.noSuchMethod(
        Invocation.method(
          #loadBundle,
          [bundle],
        ),
        returnValue: _FakeLoadBundleTask_4(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
        returnValueForMissingStub: _FakeLoadBundleTask_4(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
      ) as _i4.LoadBundleTask);
  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #useFirestoreEmulator,
          [
            host,
            port,
          ],
          {#sslEnabled: sslEnabled},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i3.GetOptions? options = const _i3.GetOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryGet,
          [name],
          {#options: options},
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i4.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectionGroup,
          [collectionPath],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i5.Future<void> disableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #disableNetwork,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i4.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #doc,
          [documentPath],
        ),
        returnValue: _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
      ) as _i4.DocumentReference<Map<String, dynamic>>);
  @override
  _i5.Future<void> enableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #enableNetwork,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Stream<void> snapshotsInSync() => (super.noSuchMethod(
        Invocation.method(
          #snapshotsInSync,
          [],
        ),
        returnValue: _i5.Stream<void>.empty(),
        returnValueForMissingStub: _i5.Stream<void>.empty(),
      ) as _i5.Stream<void>);
  @override
  _i5.Future<T> runTransaction<T>(
    _i4.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTransaction,
          [transactionHandler],
          {
            #timeout: timeout,
            #maxAttempts: maxAttempts,
          },
        ),
        returnValue: _FakeFuture_8<T>(
          this,
          Invocation.method(
            #runTransaction,
            [transactionHandler],
            {
              #timeout: timeout,
              #maxAttempts: maxAttempts,
            },
          ),
        ),
        returnValueForMissingStub: _FakeFuture_8<T>(
          this,
          Invocation.method(
            #runTransaction,
            [transactionHandler],
            {
              #timeout: timeout,
              #maxAttempts: maxAttempts,
            },
          ),
        ),
      ) as _i5.Future<T>);
  @override
  _i5.Future<void> terminate() => (super.noSuchMethod(
        Invocation.method(
          #terminate,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> waitForPendingWrites() => (super.noSuchMethod(
        Invocation.method(
          #waitForPendingWrites,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [CollectionReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class CollectionMock extends _i1.Mock
    implements _i4.CollectionReference<Map<String, dynamic>> {
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i4.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_9(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_9(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i4.FirebaseFirestore);
  @override
  Map<String, dynamic> get parameters => (super.noSuchMethod(
        Invocation.getter(#parameters),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i5.Future<_i4.DocumentReference<Map<String, dynamic>>> add(
          Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [data],
        ),
        returnValue:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #add,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #add,
            [data],
          ),
        )),
      ) as _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>);
  @override
  _i4.DocumentReference<Map<String, dynamic>> doc([String? path]) =>
      (super.noSuchMethod(
        Invocation.method(
          #doc,
          [path],
        ),
        returnValue: _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [path],
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [path],
          ),
        ),
      ) as _i4.DocumentReference<Map<String, dynamic>>);
  @override
  _i4.CollectionReference<R> withConverter<R extends Object?>({
    required _i4.FromFirestore<R>? fromFirestore,
    required _i4.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeCollectionReference_2<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeCollectionReference_2<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i4.CollectionReference<R>);
  @override
  _i4.Query<Map<String, dynamic>> endAtDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> endAt(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAt,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> endBeforeDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBeforeDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> endBefore(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBefore,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> get(
          [_i3.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i4.Query<Map<String, dynamic>> limit(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limit,
          [limit],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> limitToLast(int? limit) =>
      (super.noSuchMethod(
        Invocation.method(
          #limitToLast,
          [limit],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> snapshots(
          {bool? includeMetadataChanges = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {#includeMetadataChanges: includeMetadataChanges},
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i4.Query<Map<String, dynamic>> orderBy(
    Object? field, {
    bool? descending = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #orderBy,
          [field],
          {#descending: descending},
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAfterDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfterDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAfter(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfter,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAtDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAt(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAt,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> where(
    Object? field, {
    Object? isEqualTo,
    Object? isNotEqualTo,
    Object? isLessThan,
    Object? isLessThanOrEqualTo,
    Object? isGreaterThan,
    Object? isGreaterThanOrEqualTo,
    Object? arrayContains,
    List<Object?>? arrayContainsAny,
    List<Object?>? whereIn,
    List<Object?>? whereNotIn,
    bool? isNull,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [field],
          {
            #isEqualTo: isEqualTo,
            #isNotEqualTo: isNotEqualTo,
            #isLessThan: isLessThan,
            #isLessThanOrEqualTo: isLessThanOrEqualTo,
            #isGreaterThan: isGreaterThan,
            #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
            #arrayContains: arrayContains,
            #arrayContainsAny: arrayContainsAny,
            #whereIn: whereIn,
            #whereNotIn: whereNotIn,
            #isNull: isNull,
          },
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
}

/// A class which mocks [DocumentReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class DocMock extends _i1.Mock
    implements _i4.DocumentReference<Map<String, dynamic>> {
  @override
  _i4.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_9(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_9(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i4.FirebaseFirestore);
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i4.CollectionReference<Map<String, dynamic>> get parent =>
      (super.noSuchMethod(
        Invocation.getter(#parent),
        returnValue: _FakeCollectionReference_2<Map<String, dynamic>>(
          this,
          Invocation.getter(#parent),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_2<Map<String, dynamic>>(
          this,
          Invocation.getter(#parent),
        ),
      ) as _i4.CollectionReference<Map<String, dynamic>>);
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i4.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_2<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_2<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i4.CollectionReference<Map<String, dynamic>>);
  @override
  _i5.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> update(Map<String, Object?>? data) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i4.DocumentSnapshot<Map<String, dynamic>>> get(
          [_i3.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue:
            _i5.Future<_i4.DocumentSnapshot<Map<String, dynamic>>>.value(
                _FakeDocumentSnapshot_10<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.DocumentSnapshot<Map<String, dynamic>>>.value(
                _FakeDocumentSnapshot_10<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i5.Future<_i4.DocumentSnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.DocumentSnapshot<Map<String, dynamic>>> snapshots(
          {bool? includeMetadataChanges = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {#includeMetadataChanges: includeMetadataChanges},
        ),
        returnValue:
            _i5.Stream<_i4.DocumentSnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.DocumentSnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.DocumentSnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<void> set(
    Map<String, dynamic>? data, [
    _i3.SetOptions? options,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            data,
            options,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i4.DocumentReference<R> withConverter<R>({
    required _i4.FromFirestore<R>? fromFirestore,
    required _i4.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeDocumentReference_7<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDocumentReference_7<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i4.DocumentReference<R>);
}

/// A class which mocks [Future].
///
/// See the documentation for Mockito's code generation for more information.
class FutureDocMock extends _i1.Mock
    implements _i5.Future<_i4.DocumentReference<Map<String, dynamic>>> {
  @override
  _i5.Future<R> then<R>(
    _i5.FutureOr<R> Function(_i4.DocumentReference<Map<String, dynamic>>)?
        onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #then,
          [onValue],
          {#onError: onError},
        ),
        returnValue: _FakeFuture_8<R>(
          this,
          Invocation.method(
            #then,
            [onValue],
            {#onError: onError},
          ),
        ),
        returnValueForMissingStub: _FakeFuture_8<R>(
          this,
          Invocation.method(
            #then,
            [onValue],
            {#onError: onError},
          ),
        ),
      ) as _i5.Future<R>);
  @override
  _i5.Future<_i4.DocumentReference<Map<String, dynamic>>> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchError,
          [onError],
          {#test: test},
        ),
        returnValue:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #catchError,
            [onError],
            {#test: test},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #catchError,
            [onError],
            {#test: test},
          ),
        )),
      ) as _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.DocumentReference<Map<String, dynamic>>> whenComplete(
          _i5.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #whenComplete,
          [action],
        ),
        returnValue:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #whenComplete,
            [action],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #whenComplete,
            [action],
          ),
        )),
      ) as _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.DocumentReference<Map<String, dynamic>>> asStream() =>
      (super.noSuchMethod(
        Invocation.method(
          #asStream,
          [],
        ),
        returnValue:
            _i5.Stream<_i4.DocumentReference<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.DocumentReference<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.DocumentReference<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.DocumentReference<Map<String, dynamic>>> timeout(
    Duration? timeLimit, {
    _i5.FutureOr<_i4.DocumentReference<Map<String, dynamic>>> Function()?
        onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #timeout,
            [timeLimit],
            {#onTimeout: onTimeout},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>.value(
                _FakeDocumentReference_7<Map<String, dynamic>>(
          this,
          Invocation.method(
            #timeout,
            [timeLimit],
            {#onTimeout: onTimeout},
          ),
        )),
      ) as _i5.Future<_i4.DocumentReference<Map<String, dynamic>>>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i7.FirebaseAuth {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i5.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> useAuthEmulator(
    String? host,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i6.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue:
            _i5.Future<_i6.ActionCodeInfo>.value(_FakeActionCodeInfo_11(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i6.ActionCodeInfo>.value(_FakeActionCodeInfo_11(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i5.Future<_i6.ActionCodeInfo>);
  @override
  _i5.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i7.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);
  @override
  _i5.Future<_i7.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Stream<_i7.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i5.Stream<_i7.User?>.empty(),
        returnValueForMissingStub: _i5.Stream<_i7.User?>.empty(),
      ) as _i5.Stream<_i7.User?>);
  @override
  _i5.Stream<_i7.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i5.Stream<_i7.User?>.empty(),
        returnValueForMissingStub: _i5.Stream<_i7.User?>.empty(),
      ) as _i5.Stream<_i7.User?>);
  @override
  _i5.Stream<_i7.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i5.Stream<_i7.User?>.empty(),
        returnValueForMissingStub: _i5.Stream<_i7.User?>.empty(),
      ) as _i5.Stream<_i7.User?>);
  @override
  _i5.Future<void> sendPasswordResetEmail({
    required String? email,
    _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> setSettings({
    bool? appVerificationDisabledForTesting,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> setPersistence(_i6.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i7.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> signInWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> signInWithAuthProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> signInWithProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i5.Future<_i7.ConfirmationResult>.value(_FakeConfirmationResult_13(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.ConfirmationResult>.value(_FakeConfirmationResult_13(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i5.Future<_i7.ConfirmationResult>);
  @override
  _i5.Future<_i7.UserCredential> signInWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<void> signInWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i5.Future<String>.value(''),
        returnValueForMissingStub: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i6.PhoneMultiFactorInfo? multiFactorInfo,
    required _i6.PhoneVerificationCompleted? verificationCompleted,
    required _i6.PhoneVerificationFailed? verificationFailed,
    required _i6.PhoneCodeSent? codeSent,
    required _i6.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i6.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [TransactionModel].
///
/// See the documentation for Mockito's code generation for more information.
class TransactionMock extends _i1.Mock implements _i9.TransactionModel {
  @override
  set transactionID(String? _transactionID) => super.noSuchMethod(
        Invocation.setter(
          #transactionID,
          _transactionID,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set userID(String? _userID) => super.noSuchMethod(
        Invocation.setter(
          #userID,
          _userID,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set categoryID(String? _categoryID) => super.noSuchMethod(
        Invocation.setter(
          #categoryID,
          _categoryID,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get expense => (super.noSuchMethod(
        Invocation.getter(#expense),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  set expense(int? _expense) => super.noSuchMethod(
        Invocation.setter(
          #expense,
          _expense,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );
  @override
  num get total => (super.noSuchMethod(
        Invocation.getter(#total),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as num);
  @override
  set total(num? _total) => super.noSuchMethod(
        Invocation.setter(
          #total,
          _total,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: _FakeDateTime_14(
          this,
          Invocation.getter(#date),
        ),
        returnValueForMissingStub: _FakeDateTime_14(
          this,
          Invocation.getter(#date),
        ),
      ) as DateTime);
  @override
  set date(DateTime? _date) => super.noSuchMethod(
        Invocation.setter(
          #date,
          _date,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set notes(String? _notes) => super.noSuchMethod(
        Invocation.setter(
          #notes,
          _notes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set location(_i3.GeoPoint? _location) => super.noSuchMethod(
        Invocation.setter(
          #location,
          _location,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set categoryColor(int? _categoryColor) => super.noSuchMethod(
        Invocation.setter(
          #categoryColor,
          _categoryColor,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i7.User {
  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i6.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_15(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeUserMetadata_15(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i6.UserMetadata);
  @override
  List<_i6.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i6.UserInfo>[],
        returnValueForMissingStub: <_i6.UserInfo>[],
      ) as List<_i6.UserInfo>);
  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i7.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_16(
          this,
          Invocation.getter(#multiFactor),
        ),
        returnValueForMissingStub: _FakeMultiFactor_16(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i7.MultiFactor);
  @override
  _i5.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i5.Future<String>.value(''),
        returnValueForMissingStub: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<_i6.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i5.Future<_i6.IdTokenResult>.value(_FakeIdTokenResult_17(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i6.IdTokenResult>.value(_FakeIdTokenResult_17(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i5.Future<_i6.IdTokenResult>);
  @override
  _i5.Future<_i7.UserCredential> linkWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> linkWithProvider(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> reauthenticateWithProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<_i7.UserCredential> linkWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<void> linkWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i7.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i5.Future<_i7.ConfirmationResult>.value(_FakeConfirmationResult_13(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.ConfirmationResult>.value(_FakeConfirmationResult_13(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i5.Future<_i7.ConfirmationResult>);
  @override
  _i5.Future<_i7.UserCredential> reauthenticateWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i7.UserCredential>.value(_FakeUserCredential_12(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i5.Future<_i7.UserCredential>);
  @override
  _i5.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> sendEmailVerification(
          [_i6.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i7.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i5.Future<_i7.User>.value(_FakeUser_18(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i7.User>.value(_FakeUser_18(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i5.Future<_i7.User>);
  @override
  _i5.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> updatePhoneNumber(
          _i6.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i6.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [Query].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class QueryMock extends _i1.Mock implements _i4.Query<Map<String, dynamic>> {
  @override
  _i4.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_9(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_9(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i4.FirebaseFirestore);
  @override
  Map<String, dynamic> get parameters => (super.noSuchMethod(
        Invocation.getter(#parameters),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i4.Query<Map<String, dynamic>> endAtDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> endAt(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #endAt,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endAt,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> endBeforeDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBeforeDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBeforeDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> endBefore(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBefore,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #endBefore,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> get(
          [_i3.GetOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [options],
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [options],
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i4.Query<Map<String, dynamic>> limit(int? limit) => (super.noSuchMethod(
        Invocation.method(
          #limit,
          [limit],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limit,
            [limit],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> limitToLast(int? limit) =>
      (super.noSuchMethod(
        Invocation.method(
          #limitToLast,
          [limit],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #limitToLast,
            [limit],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> snapshots(
          {bool? includeMetadataChanges = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #snapshots,
          [],
          {#includeMetadataChanges: includeMetadataChanges},
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i4.Query<Map<String, dynamic>> orderBy(
    Object? field, {
    bool? descending = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #orderBy,
          [field],
          {#descending: descending},
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #orderBy,
            [field],
            {#descending: descending},
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAfterDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfterDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfterDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAfter(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAfter,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAfter,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAtDocument(
          _i4.DocumentSnapshot<Object?>? documentSnapshot) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAtDocument,
          [documentSnapshot],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAtDocument,
            [documentSnapshot],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> startAt(List<Object?>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAt,
          [values],
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #startAt,
            [values],
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<Map<String, dynamic>> where(
    Object? field, {
    Object? isEqualTo,
    Object? isNotEqualTo,
    Object? isLessThan,
    Object? isLessThanOrEqualTo,
    Object? isGreaterThan,
    Object? isGreaterThanOrEqualTo,
    Object? arrayContains,
    List<Object?>? arrayContainsAny,
    List<Object?>? whereIn,
    List<Object?>? whereNotIn,
    bool? isNull,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [field],
          {
            #isEqualTo: isEqualTo,
            #isNotEqualTo: isNotEqualTo,
            #isLessThan: isLessThan,
            #isLessThanOrEqualTo: isLessThanOrEqualTo,
            #isGreaterThan: isGreaterThan,
            #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
            #arrayContains: arrayContains,
            #arrayContainsAny: arrayContainsAny,
            #whereIn: whereIn,
            #whereNotIn: whereNotIn,
            #isNull: isNull,
          },
        ),
        returnValue: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<Map<String, dynamic>>(
          this,
          Invocation.method(
            #where,
            [field],
            {
              #isEqualTo: isEqualTo,
              #isNotEqualTo: isNotEqualTo,
              #isLessThan: isLessThan,
              #isLessThanOrEqualTo: isLessThanOrEqualTo,
              #isGreaterThan: isGreaterThan,
              #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
              #arrayContains: arrayContains,
              #arrayContainsAny: arrayContainsAny,
              #whereIn: whereIn,
              #whereNotIn: whereNotIn,
              #isNull: isNull,
            },
          ),
        ),
      ) as _i4.Query<Map<String, dynamic>>);
  @override
  _i4.Query<R> withConverter<R>({
    required _i4.FromFirestore<R>? fromFirestore,
    required _i4.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withConverter,
          [],
          {
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue: _FakeQuery_6<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
        returnValueForMissingStub: _FakeQuery_6<R>(
          this,
          Invocation.method(
            #withConverter,
            [],
            {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        ),
      ) as _i4.Query<R>);
}

/// A class which mocks [Stream].
///
/// See the documentation for Mockito's code generation for more information.
class StreamQuerySnapshotMock extends _i1.Mock
    implements _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> {
  @override
  bool get isBroadcast => (super.noSuchMethod(
        Invocation.getter(#isBroadcast),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Future<int> get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<bool> get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> get first =>
      (super.noSuchMethod(
        Invocation.getter(#first),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.getter(#first),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.getter(#first),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> get last =>
      (super.noSuchMethod(
        Invocation.getter(#last),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.getter(#last),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.getter(#last),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> get single =>
      (super.noSuchMethod(
        Invocation.getter(#single),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.getter(#single),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.getter(#single),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> asBroadcastStream({
    void Function(
            _i5.StreamSubscription<_i4.QuerySnapshot<Map<String, dynamic>>>)?
        onListen,
    void Function(
            _i5.StreamSubscription<_i4.QuerySnapshot<Map<String, dynamic>>>)?
        onCancel,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #asBroadcastStream,
          [],
          {
            #onListen: onListen,
            #onCancel: onCancel,
          },
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.StreamSubscription<_i4.QuerySnapshot<Map<String, dynamic>>> listen(
    void Function(_i4.QuerySnapshot<Map<String, dynamic>>)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [onData],
          {
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValue:
            _FakeStreamSubscription_19<_i4.QuerySnapshot<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #listen,
            [onData],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
        returnValueForMissingStub:
            _FakeStreamSubscription_19<_i4.QuerySnapshot<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #listen,
            [onData],
            {
              #onError: onError,
              #onDone: onDone,
              #cancelOnError: cancelOnError,
            },
          ),
        ),
      ) as _i5.StreamSubscription<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> where(
          bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [test],
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<S> map<S>(
          S Function(_i4.QuerySnapshot<Map<String, dynamic>>)? convert) =>
      (super.noSuchMethod(
        Invocation.method(
          #map,
          [convert],
        ),
        returnValue: _i5.Stream<S>.empty(),
        returnValueForMissingStub: _i5.Stream<S>.empty(),
      ) as _i5.Stream<S>);
  @override
  _i5.Stream<E> asyncMap<E>(
          _i5.FutureOr<E> Function(_i4.QuerySnapshot<Map<String, dynamic>>)?
              convert) =>
      (super.noSuchMethod(
        Invocation.method(
          #asyncMap,
          [convert],
        ),
        returnValue: _i5.Stream<E>.empty(),
        returnValueForMissingStub: _i5.Stream<E>.empty(),
      ) as _i5.Stream<E>);
  @override
  _i5.Stream<E> asyncExpand<E>(
          _i5.Stream<E>? Function(_i4.QuerySnapshot<Map<String, dynamic>>)?
              convert) =>
      (super.noSuchMethod(
        Invocation.method(
          #asyncExpand,
          [convert],
        ),
        returnValue: _i5.Stream<E>.empty(),
        returnValueForMissingStub: _i5.Stream<E>.empty(),
      ) as _i5.Stream<E>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> handleError(
    Function? onError, {
    bool Function(dynamic)? test,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [onError],
          {#test: test},
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<S> expand<S>(
          Iterable<S> Function(_i4.QuerySnapshot<Map<String, dynamic>>)?
              convert) =>
      (super.noSuchMethod(
        Invocation.method(
          #expand,
          [convert],
        ),
        returnValue: _i5.Stream<S>.empty(),
        returnValueForMissingStub: _i5.Stream<S>.empty(),
      ) as _i5.Stream<S>);
  @override
  _i5.Future<dynamic> pipe(
          _i5.StreamConsumer<_i4.QuerySnapshot<Map<String, dynamic>>>?
              streamConsumer) =>
      (super.noSuchMethod(
        Invocation.method(
          #pipe,
          [streamConsumer],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Stream<S> transform<S>(
          _i5.StreamTransformer<_i4.QuerySnapshot<Map<String, dynamic>>, S>?
              streamTransformer) =>
      (super.noSuchMethod(
        Invocation.method(
          #transform,
          [streamTransformer],
        ),
        returnValue: _i5.Stream<S>.empty(),
        returnValueForMissingStub: _i5.Stream<S>.empty(),
      ) as _i5.Stream<S>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> reduce(
          _i4.QuerySnapshot<Map<String, dynamic>> Function(
            _i4.QuerySnapshot<Map<String, dynamic>>,
            _i4.QuerySnapshot<Map<String, dynamic>>,
          )? combine) =>
      (super.noSuchMethod(
        Invocation.method(
          #reduce,
          [combine],
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #reduce,
            [combine],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #reduce,
            [combine],
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<S> fold<S>(
    S? initialValue,
    S Function(
      S,
      _i4.QuerySnapshot<Map<String, dynamic>>,
    )? combine,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fold,
          [
            initialValue,
            combine,
          ],
        ),
        returnValue: _FakeFuture_8<S>(
          this,
          Invocation.method(
            #fold,
            [
              initialValue,
              combine,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeFuture_8<S>(
          this,
          Invocation.method(
            #fold,
            [
              initialValue,
              combine,
            ],
          ),
        ),
      ) as _i5.Future<S>);
  @override
  _i5.Future<String> join([String? separator = r'']) => (super.noSuchMethod(
        Invocation.method(
          #join,
          [separator],
        ),
        returnValue: _i5.Future<String>.value(''),
        returnValueForMissingStub: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<bool> contains(Object? needle) => (super.noSuchMethod(
        Invocation.method(
          #contains,
          [needle],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<dynamic> forEach(
          void Function(_i4.QuerySnapshot<Map<String, dynamic>>)? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #forEach,
          [action],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<bool> every(
          bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #every,
          [test],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> any(
          bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #any,
          [test],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Stream<R> cast<R>() => (super.noSuchMethod(
        Invocation.method(
          #cast,
          [],
        ),
        returnValue: _i5.Stream<R>.empty(),
        returnValueForMissingStub: _i5.Stream<R>.empty(),
      ) as _i5.Stream<R>);
  @override
  _i5.Future<List<_i4.QuerySnapshot<Map<String, dynamic>>>> toList() =>
      (super.noSuchMethod(
        Invocation.method(
          #toList,
          [],
        ),
        returnValue:
            _i5.Future<List<_i4.QuerySnapshot<Map<String, dynamic>>>>.value(
                <_i4.QuerySnapshot<Map<String, dynamic>>>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i4.QuerySnapshot<Map<String, dynamic>>>>.value(
                <_i4.QuerySnapshot<Map<String, dynamic>>>[]),
      ) as _i5.Future<List<_i4.QuerySnapshot<Map<String, dynamic>>>>);
  @override
  _i5.Future<Set<_i4.QuerySnapshot<Map<String, dynamic>>>> toSet() =>
      (super.noSuchMethod(
        Invocation.method(
          #toSet,
          [],
        ),
        returnValue:
            _i5.Future<Set<_i4.QuerySnapshot<Map<String, dynamic>>>>.value(
                <_i4.QuerySnapshot<Map<String, dynamic>>>{}),
        returnValueForMissingStub:
            _i5.Future<Set<_i4.QuerySnapshot<Map<String, dynamic>>>>.value(
                <_i4.QuerySnapshot<Map<String, dynamic>>>{}),
      ) as _i5.Future<Set<_i4.QuerySnapshot<Map<String, dynamic>>>>);
  @override
  _i5.Future<E> drain<E>([E? futureValue]) => (super.noSuchMethod(
        Invocation.method(
          #drain,
          [futureValue],
        ),
        returnValue: _FakeFuture_8<E>(
          this,
          Invocation.method(
            #drain,
            [futureValue],
          ),
        ),
        returnValueForMissingStub: _FakeFuture_8<E>(
          this,
          Invocation.method(
            #drain,
            [futureValue],
          ),
        ),
      ) as _i5.Future<E>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> take(int? count) =>
      (super.noSuchMethod(
        Invocation.method(
          #take,
          [count],
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> takeWhile(
          bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeWhile,
          [test],
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> skip(int? count) =>
      (super.noSuchMethod(
        Invocation.method(
          #skip,
          [count],
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> skipWhile(
          bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #skipWhile,
          [test],
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> distinct(
          [bool Function(
            _i4.QuerySnapshot<Map<String, dynamic>>,
            _i4.QuerySnapshot<Map<String, dynamic>>,
          )? equals]) =>
      (super.noSuchMethod(
        Invocation.method(
          #distinct,
          [equals],
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> firstWhere(
    bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test, {
    _i4.QuerySnapshot<Map<String, dynamic>> Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #firstWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #firstWhere,
            [test],
            {#orElse: orElse},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #firstWhere,
            [test],
            {#orElse: orElse},
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> lastWhere(
    bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test, {
    _i4.QuerySnapshot<Map<String, dynamic>> Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #lastWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #lastWhere,
            [test],
            {#orElse: orElse},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #lastWhere,
            [test],
            {#orElse: orElse},
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> singleWhere(
    bool Function(_i4.QuerySnapshot<Map<String, dynamic>>)? test, {
    _i4.QuerySnapshot<Map<String, dynamic>> Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #singleWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #singleWhere,
            [test],
            {#orElse: orElse},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #singleWhere,
            [test],
            {#orElse: orElse},
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>> elementAt(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #elementAt,
          [index],
        ),
        returnValue: _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #elementAt,
            [index],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #elementAt,
            [index],
          ),
        )),
      ) as _i5.Future<_i4.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>> timeout(
    Duration? timeLimit, {
    void Function(_i5.EventSink<_i4.QuerySnapshot<Map<String, dynamic>>>)?
        onTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeout,
          [timeLimit],
          {#onTimeout: onTimeout},
        ),
        returnValue:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i5.Stream<_i4.QuerySnapshot<Map<String, dynamic>>>);
}
